{"version":3,"sources":["webpack:///./src/app/news-detail/news-detail.module.ts","webpack:///./src/app/news-detail/news-detail.page.html","webpack:///./src/app/news-detail/news-detail.page.scss","webpack:///./src/app/news-detail/news-detail.page.ts","webpack:///./src/app/news.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEO;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,gEAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBjC,8VAA8V,sBAAsB,uBAAuB,sBAAsB,8CAA8C,gBAAgB,qKAAqK,kBAAkB,oE;;;;;;;;;;;ACAtpB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACL;AAOzC;IAEE,wBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,iCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;IACjD,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAXU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAGiC,yDAAW,EAAkB,sDAAM;OAFzD,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACe;AACR;AAElD,IAAM,OAAO,GAAG,qEAAW,CAAC,MAAM,CAAC;AACnC,IAAM,OAAO,GAAG,qEAAW,CAAC,MAAM,CAAC;AAKnC;IAIE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,aAAQ,GAAG,SAAS,CAAC;IAGmB,CAAC;IAEzC,6BAAO,GAAP,UAAQ,GAAG;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,OAAO,SAAI,GAAG,gBAAW,OAAS,CAAC,CAAC;IAC9D,CAAC;IARU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,WAAW,CASvB;IAAD,kBAAC;CAAA;AATuB","file":"news-detail-news-detail-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewsDetailPage } from './news-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewsDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NewsDetailPage]\n})\nexport class NewsDetailPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"skip-backward\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>News detail</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-card (click)=\\\"onBack()\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle>Source: {{article?.source.name}}\\n        <br/>Time: {{article?.publishedAt}}</ion-card-subtitle>\\n      <ion-card-title>{{article?.title}}</ion-card-title>\\n    </ion-card-header>\\n    <ion-item>\\n      <ion-img [src]=\\\"article?.urlToImage\\\"></ion-img>\\n    </ion-item>\\n    <ion-card-content>\\n      {{article?.content}}\\n    </ion-card-content>\\n    <br/>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../news.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.page.html',\n  styleUrls: ['./news-detail.page.scss'],\n})\nexport class NewsDetailPage implements OnInit {\n  article;\n  constructor(private newsService: NewsService, private router: Router) { }\n\n  ngOnInit() {\n    this.article = this.newsService.currentArticle;\n  }\n\n  onBack() {\n    this.router.navigate(['/']);\n    this.article = null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\nconst API_URL = environment.apiUrl;\nconst API_KEY = environment.apiKey;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  category = 'general';\n  currentArticle: any;\n\n  constructor(private http: HttpClient) { }\n\n  getData(url) {\n    return this.http.get(`${API_URL}/${url}&apiKey=${API_KEY}`);\n  }\n}\n"],"sourceRoot":""}